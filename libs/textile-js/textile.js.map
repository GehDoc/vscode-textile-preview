{"version":3,"sources":["webpack://textile/webpack/universalModuleDefinition","webpack://textile/webpack/bootstrap","webpack://textile/./src/re.js","webpack://textile/./src/ribbon.js","webpack://textile/./src/textile/attr.js","webpack://textile/./src/html.js","webpack://textile/./src/textile/phrase.js","webpack://textile/./src/textile/re_ext.js","webpack://textile/./src/merge.js","webpack://textile/./src/jsonml.js","webpack://textile/./src/textile/flow.js","webpack://textile/./src/builder.js","webpack://textile/./src/index.js","webpack://textile/./src/fixlinks.js","webpack://textile/./src/mergeConcatClassname.js","webpack://textile/./src/textile/glyph.js","webpack://textile/./src/textile/list.js","webpack://textile/./src/textile/deflist.js","webpack://textile/./src/textile/table.js"],"names":["_cache","re","module","exports","pattern","escape","src","replace","collapse","expandPatterns","m","k","ex","Error","isRegExp","r","Object","prototype","toString","call","compile","flags","arguments","length","global","ignoreCase","multiline","source","ckey","rx","test","RegExp","ribbon","feed","org","String","slot","pos","self","index","save","getSlot","getPos","load","slice","advance","n","skipWS","ws","exec","lookbehind","nchars","startsWith","s","substring","a","b","valueOf","reClassid","rePaddingL","rePaddingR","reAlignBlock","reAlignImg","reVAlign","reColSpan","reRowSpan","reStyles","reCSS","reLang","pbaAlignLookup","pbaVAlignLookup","copyAttr","blacklist","undefined","d","testBlock","name","parseAttr","input","element","endToken","st","o","remaining","isBlock","isImg","isList","isPhrase","reAlign","split","forEach","p","match","rm","bits","class","id","align","v","push","style","join","addLineNumber","jsonmlEntryAttr","options","charPosToLine","charOffset","charPos","charPosEnd","showOriginalLineNumber","cssClassOriginalLineNumber","require","html_id","html_attr","reAttr","reComment","reEndTag","reTag","reHtmlTagBlock","singletons","area","base","br","col","embed","hr","img","link","meta","option","param","wbr","allowAll","testComment","testOpenTagBlock","testOpenTag","testCloseTag","parseHtmlAttr","attrSrc","attr","OPEN","CLOSE","SINGLE","TEXT","COMMENT","WS","tokenize","whitelistTags","lazy","tokens","textMode","oktag","tag","oktag_","nesting","nestCount","type","data","token","isNaN","parse","root","stack","curr","i","elm","head","splice","sourceLength","parseHtml","builder","mergeConcatClassname","parseGlyph","ucaps","txattr","txcite","phraseConvert","rePhrase","reImage","reImageFenced","reCaps","reLink","reLinkFenced","reLinkTitle","reFootnote","parsePhrase","list","pba","breaks","add","srcSlot","behind","boundary","tok","fence","phraseType","code","mMid","mEnd","t1","charAt","srcPos","concat","alt","title","single","pbaLineNumber","merge","href","caps","inner","get","map","txblocks","attr_class","attr_style","attr_lang","attr_align","attr_pad","txlisthd","reIndent","ml","shiftBy","Array","isArray","text","escapeQuotes","toHTML","jsonml","renderers","shift","attributes","tagAttrs","content","realContent","render","indexOf","applyHooks","hooks","level","realLevel","l","hook","isNode","isAttributes","mlPart","hasAttributes","addAttributes","newAttr","assign","fixLink","testList","parseList","testDefList","parseDefList","testTable","parseTable","allowedBlocktags","reBlock","reBlockNormal","reBlockExtended","reBlockNormalPre","reBlockExtendedPre","reRuler","reLinkRef","reFootnoteDef","reCleanBegin","hasOwn","hasOwnProperty","extend","target","nextKey","paragraph","linebreak","out","bit","localCharOffset","removedSrc","trim","computeCharOffset","lineOffset","storeCharPosToLine","realSrc","parseFlow","linkRefs","charLineOffset","garbage","blockType","extended","reBlockGlob","cite","par","subPba","fnid","t","x","pop","innerHTML","innerElm","initArr","arr","node","filter","jsonmlUtils","textile","txt","opt","defaults","value","setOptions","setoptions","convert","html_parser","serialize","dict","mergeConcatClassName","reApostrophe","reArrow","reClosingDQuote","reClosingSQuote","reCopyright","reDimsign","reDoublePrime","reEllipsis","reEmdash","reEndash","reOpenDQuote","reOpenSQuote","reRegistered","reSinglePrime","reTrademark","reList","reItem","listPad","currIndex","lastIndex","_lst","itemIndex","listAttr","item","destLevel","substr","newLi","lst","isFinite","parseInt","li","ul","att","start","apply","reDeflist","deflist","terms","def","separators","term","reTable","reHead","reRowCapture","reCaption","reColgroup","reRowgroup","charToTag","parseColgroup","colgroup","isCol","span","width","rowgroups","caption","tAttr","tCurr","row","more","setRowGroup","summary","th","cell","mx","table","tbody"],"mappings":"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","file":"textile.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"textile\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"textile\"] = factory();\n\telse\n\t\troot[\"textile\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","/*\n** Regular Expression helper methods\n**\n** This provides the `re` object, which contains several helper\n** methods for working with big regular expressions (soup).\n**\n*/\n\nconst _cache = {};\n\nconst re = module.exports = {\n\n  pattern: {\n    'punct': '[!-/:-@\\\\[\\\\\\\\\\\\]-`{-~]',\n    'space': '\\\\s'\n  },\n\n  escape: function ( src ) {\n    return src.replace( /[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&' );\n  },\n\n  collapse: function ( src ) {\n    return src.replace( /(?:#.*?(?:\\n|$))/g, '' )\n      .replace( /\\s+/g, '' );\n  },\n\n  expandPatterns: function ( src ) {\n    // TODO: provide escape for patterns: \\[:pattern:] ?\n    return src.replace( /\\[:\\s*(\\w+)\\s*:\\]/g, function ( m, k ) {\n      const ex = re.pattern[k];\n      if ( ex ) {\n        return re.expandPatterns( ex );\n      }\n      else {\n        throw new Error( 'Pattern ' + m + ' not found in ' + src );\n      }\n    });\n  },\n\n  isRegExp: function ( r ) {\n    return Object.prototype.toString.call( r ) === '[object RegExp]';\n  },\n\n  compile: function ( src, flags ) {\n    if ( re.isRegExp( src ) ) {\n      if ( arguments.length === 1 ) { // no flags arg provided, use the RegExp one\n        flags = ( src.global ? 'g' : '' ) +\n                ( src.ignoreCase ? 'i' : '' ) +\n                ( src.multiline ? 'm' : '' );\n      }\n      src = src.source;\n    }\n    // don't do the same thing twice\n    const ckey = src + ( flags || '' );\n    if ( ckey in _cache ) {\n      return _cache[ ckey ];\n    }\n    // allow classes\n    let rx = re.expandPatterns( src );\n    // allow verbose expressions\n    if ( flags && /x/.test( flags ) ) {\n      rx = re.collapse( rx );\n    }\n    // allow dotall expressions\n    if ( flags && /s/.test( flags ) ) {\n      rx = rx.replace( /([^\\\\])\\./g, '$1[^\\\\0]' );\n    }\n    // TODO: test if MSIE and add replace \\s with [\\s\\u00a0] if it is?\n    // clean flags and output new regexp\n    flags = ( flags || '' ).replace( /[^gim]/g, '' );\n    return ( _cache[ ckey ] = new RegExp( rx, flags ) );\n  }\n\n};\n","module.exports = function ribbon ( feed ) {\n  const org = String( feed );\n  let slot;\n  let pos = 0;\n  const self = {\n\n    index: () => {\n      return pos;\n    },\n\n    save: () => {\n      slot = pos;\n      return self;\n    },\n\n    getSlot: () => {\n      return slot || 0;\n    },\n\n    getPos: () => {\n      return pos || 0;\n    },\n\n    load: () => {\n      pos = slot;\n      feed = org.slice( pos );\n      return self;\n    },\n\n    advance: n => {\n      pos += ( typeof n === 'string' ) ? n.length : n;\n      feed = org.slice( pos );\n      return feed;\n    },\n\n    skipWS: () => {\n      const ws = /^\\s+/.exec( feed );\n      if ( ws ) {\n        pos += ws[0].length;\n        feed = org.slice( pos );\n        return ws[0];\n      }\n      return '';\n    },\n\n    lookbehind: nchars => {\n      nchars = nchars == null ? 1 : nchars;\n      return org.slice( pos - nchars, pos );\n    },\n\n    startsWith: s => {\n      return feed.substring( 0, s.length ) === s;\n    },\n\n    slice: ( a, b ) => {\n      return b != null ? feed.slice( a, b ) : feed.slice( a );\n    },\n\n    valueOf: () => {\n      return feed;\n    },\n\n    toString: () => {\n      return feed;\n    }\n\n  };\n\n  return self;\n};\n","const reClassid = /^\\(([^()\\n]+)\\)/;\nconst rePaddingL = /^(\\(+)/;\nconst rePaddingR = /^(\\)+)/;\nconst reAlignBlock = /^(<>|<|>|=)/;\nconst reAlignImg = /^(<|>|=)/;\nconst reVAlign = /^(~|\\^|-)/;\nconst reColSpan = /^\\\\(\\d+)/;\nconst reRowSpan = /^\\/(\\d+)/;\nconst reStyles = /^\\{([^}]*)\\}/;\nconst reCSS = /^\\s*([^:\\s]+)\\s*:\\s*(.+)\\s*$/;\nconst reLang = /^\\[([^[\\]\\n]+)\\]/;\n\nconst pbaAlignLookup = {\n  '<': 'left',\n  '=': 'center',\n  '>': 'right',\n  '<>': 'justify'\n};\n\nconst pbaVAlignLookup = {\n  '~': 'bottom',\n  '^': 'top',\n  '-': 'middle'\n};\n\nfunction copyAttr ( s, blacklist ) {\n  if ( !s ) { return undefined; }\n  const d = {};\n  for ( const k in s ) {\n    if ( k in s && ( !blacklist || !( k in blacklist ) ) ) {\n      d[ k ] = s[ k ];\n    }\n  }\n  return d;\n}\n\nfunction testBlock ( name ) {\n  // \"in\" test would be better but what about fn#.?\n  return /^(?:table|t[dh]|t(?:foot|head|body)|b[qc]|div|notextile|pre|h[1-6]|fn\\\\d+|p|###)$/.test( name );\n}\n\n/*\n  The attr bit causes massive problems for span elements when parentheses are used.\n  Parentheses are a total mess and, unsurprisingly, cause trip-ups:\n\n   RC: `_{display:block}(span) span (span)_` -> `<em style=\"display:block;\" class=\"span\">(span) span (span)</em>`\n   PHP: `_{display:block}(span) span (span)_` -> `<em style=\"display:block;\">(span) span (span)</em>`\n\n  PHP and RC seem to mostly solve this by not parsing a final attr parens on spans if the\n  following character is a non-space. I've duplicated that: Class/ID is not matched on spans\n  if it is followed by `endToken` or <space>.\n\n  Lang is not matched here if it is followed by the end token. Theoretically I could limit the lang\n  attribute to /^\\[[a-z]{2+}(\\-[a-zA-Z0-9]+)*\\]/ because Textile is layered on top of HTML which\n  only accepts valid BCP 47 language tags, but who knows what atrocities are being preformed\n  out there in the real world. So this attempts to emulate the other libraries.\n*/\nfunction parseAttr ( input, element, endToken ) {\n  input = String( input );\n  if ( !input || element === 'notextile' ) {\n    return undefined;\n  }\n\n  let m;\n  const st = {};\n  const o = { 'style': st };\n  let remaining = input;\n\n  const isBlock = testBlock( element );\n  const isImg = element === 'img';\n  const isList = element === 'li';\n  const isPhrase = !isBlock && !isImg && element !== 'a';\n  const reAlign = ( isImg ) ? reAlignImg : reAlignBlock;\n\n  do {\n    if ( ( m = reStyles.exec( remaining ) ) ) {\n      m[1].split( ';' ).forEach( function ( p ) {\n        const d = p.match( reCSS );\n        if ( d ) { st[ d[1] ] = d[2]; }\n      });\n      remaining = remaining.slice( m[0].length );\n      continue;\n    }\n\n    if ( ( m = reLang.exec( remaining ) ) ) {\n      const rm = remaining.slice( m[0].length );\n      if ( ( !rm && isPhrase ) ||\n           ( endToken && endToken === rm.slice( 0, endToken.length ) ) ) {\n        m = null;\n      }\n      else {\n        o['lang'] = m[1];\n        remaining = remaining.slice( m[0].length );\n      }\n      continue;\n    }\n\n    if ( ( m = reClassid.exec( remaining ) ) ) {\n      const rm = remaining.slice( m[0].length );\n      if (\n        ( !rm && isPhrase ) ||\n          ( endToken && ( rm[0] === ' ' || endToken === rm.slice( 0, endToken.length ) ) )\n      ) {\n        m = null;\n      }\n      else {\n        const bits = m[1].split( '#' );\n        if ( bits[0] ) { o.class = bits[0]; }\n        if ( bits[1] ) { o.id = bits[1]; }\n        remaining = rm;\n      }\n      continue;\n    }\n\n    if ( isBlock || isList ) {\n      if ( ( m = rePaddingL.exec( remaining ) ) ) {\n        st[ 'padding-left' ] = `${ m[1].length }em`;\n        remaining = remaining.slice( m[0].length );\n        continue;\n      }\n      if ( ( m = rePaddingR.exec( remaining ) ) ) {\n        st[ 'padding-right' ] = `${ m[1].length }em`;\n        remaining = remaining.slice( m[0].length );\n        continue;\n      }\n    }\n\n    // only for blocks:\n    if ( isImg || isBlock || isList ) {\n      if ( ( m = reAlign.exec( remaining ) ) ) {\n        const align = pbaAlignLookup[ m[1] ];\n        if ( isImg ) {\n          o[ 'align' ] = align;\n        }\n        else {\n          st[ 'text-align' ] = align;\n        }\n        remaining = remaining.slice( m[0].length );\n        continue;\n      }\n    }\n\n    // only for table cells\n    if ( element === 'td' || element === 'tr' ) {\n      if ( ( m = reVAlign.exec( remaining ) ) ) {\n        st[ 'vertical-align' ] = pbaVAlignLookup[ m[1] ];\n        remaining = remaining.slice( m[0].length );\n        continue;\n      }\n    }\n    if ( element === 'td' ) {\n      if ( ( m = reColSpan.exec( remaining ) ) ) {\n        o[ 'colspan' ] = m[1];\n        remaining = remaining.slice( m[0].length );\n        continue;\n      }\n      if ( ( m = reRowSpan.exec( remaining ) ) ) {\n        o[ 'rowspan' ] = m[1];\n        remaining = remaining.slice( m[0].length );\n        continue;\n      }\n    }\n  }\n  while ( m );\n\n  // collapse styles\n  const s = [];\n  for ( const v in st ) {\n    s.push( `${ v }:${ st[v] }` );\n  }\n  if ( s.length ) {\n    o.style = s.join( ';' );\n  }\n  else {\n    delete o.style;\n  }\n\n  return ( remaining === input ) ? undefined : [ input.length - remaining.length, o ];\n}\n\nfunction addLineNumber ( jsonmlEntryAttr, options, charPosToLine, charOffset, charPos, charPosEnd ) {\n  if ( options.showOriginalLineNumber && charPosToLine ) {\n    charOffset = charOffset || 0;\n    if ( !jsonmlEntryAttr ) {\n      jsonmlEntryAttr = {};\n    }\n    jsonmlEntryAttr['data-line'] = charPosToLine[ charOffset + charPos ];\n    if ( typeof charPosEnd !== 'undefined' ) {\n      jsonmlEntryAttr['data-line-end'] = charPosToLine[ charOffset + charPosEnd ];\n    }\n    if ( options.cssClassOriginalLineNumber ) {\n      jsonmlEntryAttr['class'] = ( jsonmlEntryAttr['class'] ? jsonmlEntryAttr['class'] + ' ' : '' ) + options.cssClassOriginalLineNumber;\n    }\n  }\n  return jsonmlEntryAttr;\n}\n\nmodule.exports = {\n  copyAttr: copyAttr,\n  parseAttr: parseAttr,\n  addLineNumber: addLineNumber\n};\n","const re = require( './re' );\nconst ribbon = require( './ribbon' );\n\nre.pattern.html_id = '[a-zA-Z][a-zA-Z\\\\d:]*';\nre.pattern.html_attr = '(?:\"[^\"]+\"|\\'[^\\']+\\'|[^>\\\\s]+)';\n\nconst reAttr = re.compile( /^\\s*([^=\\s]+)(?:\\s*=\\s*(\"[^\"]+\"|'[^']+'|[^>\\s]+))?/ );\nconst reComment = re.compile( /^<!--(.+?)-->/, 's' );\nconst reEndTag = re.compile( /^<\\/([:html_id:])([^>]*)>/ );\nconst reTag = re.compile( /^<([:html_id:])((?:\\s[^=\\s/]+(?:\\s*=\\s*[:html_attr:])?)+)?\\s*(\\/?)>/ );\nconst reHtmlTagBlock = re.compile( /^\\s*<([:html_id:](?::[a-zA-Z\\d]+)*)((?:\\s[^=\\s/]+(?:\\s*=\\s*[:html_attr:])?)+)?\\s*(\\/?)>/ );\n\nconst singletons = {\n  area: 1,\n  base: 1,\n  br: 1,\n  col: 1,\n  embed: 1,\n  hr: 1,\n  img: 1,\n  input: 1,\n  link: 1,\n  meta: 1,\n  option: 1,\n  param: 1,\n  wbr: 1\n};\n\nfunction allowAll () {\n  return true;\n}\n\nfunction testComment ( src ) {\n  return reComment.exec( src );\n}\n\nfunction testOpenTagBlock ( src ) {\n  return reHtmlTagBlock.exec( src );\n}\n\nfunction testOpenTag ( src ) {\n  return reTag.exec( src );\n}\n\nfunction testCloseTag ( src ) {\n  return reEndTag.exec( src );\n}\n\nfunction parseHtmlAttr ( attrSrc ) {\n  // parse ATTR and add to element\n  const attr = {};\n  let m;\n  while ( ( m = reAttr.exec( attrSrc ) ) ) {\n    attr[ m[1] ] = ( typeof m[2] === 'string' ) ? m[2].replace( /^([\"'])(.*)\\1$/, '$2' ) : null;\n    attrSrc = attrSrc.slice( m[0].length );\n  }\n  return attr;\n}\n\nconst OPEN = 'OPEN';\nconst CLOSE = 'CLOSE';\nconst SINGLE = 'SINGLE';\nconst TEXT = 'TEXT';\nconst COMMENT = 'COMMENT';\nconst WS = 'WS';\n\nfunction tokenize ( src, whitelistTags, lazy ) {\n  const tokens = [];\n  let textMode = false;\n  let oktag = whitelistTags ? ( tag ) => tag in whitelistTags : allowAll;\n  const oktag_ = oktag;\n  const nesting = {};\n  let nestCount = 0;\n  let m;\n\n  src = ribbon( String( src ) );\n\n  do {\n    // comment\n    if ( ( m = testComment( src ) ) && oktag( '!' ) ) {\n      tokens.push({\n        type: COMMENT,\n        data: m[1],\n        pos: src.index(),\n        src: m[0]\n      });\n      src.advance( m[0] );\n    }\n\n    // end tag\n    else if ( ( m = testCloseTag( src ) ) && oktag( m[1] ) ) {\n      const token = {\n        type: CLOSE,\n        tag: m[1],\n        pos: src.index(),\n        src: m[0]\n      };\n      src.advance( m[0] );\n      tokens.push( token );\n      nesting[token.tag]--;\n      nestCount--;\n      // console.log( '/' + token.tag, nestCount, nesting );\n      if ( lazy && (\n        !nestCount ||\n        !nesting[token.tag] < 0 ||\n        isNaN( nesting[token.tag] )\n      ) ) {\n        return tokens;\n      }\n      // if parse is in text mode then that ends here\n      if ( textMode ) {\n        textMode = null;\n        oktag = oktag_;\n      }\n    }\n\n    // open/void tag\n    else if ( ( m = testOpenTag( src ) ) && oktag( m[1] ) ) {\n      const token = {\n        type: m[3] || m[1] in singletons ? SINGLE : OPEN,\n        tag: m[1],\n        pos: src.index(),\n        src: m[0]\n      };\n      if ( m[2] ) {\n        token.attr = parseHtmlAttr( m[2] );\n      }\n      // some elements can move parser into \"text\" mode\n      if ( m[1] === 'script' || m[1] === 'code' || m[1] === 'style' ) {\n        textMode = token.tag;\n        oktag = tag => tag === textMode;\n      }\n      if ( token.type === OPEN ) {\n        nestCount++;\n        nesting[token.tag] = ( nesting[token.tag] || 0 ) + 1;\n        // console.log( token.tag, nestCount, nesting );\n      }\n      tokens.push( token );\n      src.advance( m[0] );\n    }\n\n    // text content\n    else {\n      // no match, move by all \"uninteresting\" chars\n      m = /([^<]+|[^\\0])/.exec( src );\n      if ( m ) {\n        tokens.push({\n          type: TEXT,\n          data: m[0],\n          pos: src.index(),\n          src: m[0]\n        });\n      }\n      src.advance( m ? m[0].length || 1 : 1 );\n    }\n  }\n  while ( src.valueOf() );\n\n  return tokens;\n}\n\n// This \"indesciminately\" parses HTML text into a list of JSON-ML element\n// No steps are taken however to prevent things like <table><p><td> - user can still create nonsensical but \"well-formed\" markup\nfunction parse ( tokens, lazy ) {\n  const root = [];\n  const stack = [];\n  let curr = root;\n  let token;\n  for ( let i = 0; i < tokens.length; i++ ) {\n    token = tokens[i];\n    if ( token.type === COMMENT ) {\n      curr.push( [ '!', token.data ] );\n    }\n    else if ( token.type === TEXT || token.type === WS ) {\n      curr.push( token.data );\n    }\n    else if ( token.type === SINGLE ) {\n      curr.push( token.attr ? [ token.tag, token.attr ] : [ token.tag ] );\n    }\n    else if ( token.type === OPEN ) {\n      // TODO: some things auto close other things: <td>, <li>, <p>, <table>\n      // https://html.spec.whatwg.org/multipage/syntax.html#syntax-tag-omission\n      const elm = token.attr ? [ token.tag, token.attr ] : [ token.tag ];\n      curr.push( elm );\n      stack.push( elm );\n      curr = elm;\n    }\n    else if ( token.type === CLOSE ) {\n      if ( stack.length ) {\n        for ( let i = stack.length - 1; i >= 0; i-- ) {\n          const head = stack[i];\n          if ( head[0] === token.tag ) {\n            stack.splice( i );\n            curr = stack[stack.length - 1] || root;\n            break;\n          }\n        }\n      }\n      if ( !stack.length && lazy ) {\n        root.sourceLength = token.pos + token.src.length;\n        return root;\n      }\n    }\n  }\n  root.sourceLength = token ? token.pos + token.src.length : 0;\n  return root;\n}\n\nmodule.exports = {\n  singletons: singletons,\n  tokenize: tokenize,\n  parseHtml: parse,\n  parseHtmlAttr: parseHtmlAttr,\n  testCloseTag: testCloseTag,\n  testOpenTagBlock: testOpenTagBlock,\n  testOpenTag: testOpenTag,\n  testComment: testComment\n};\n","/* textile inline parser */\n\nconst ribbon = require( '../ribbon' );\nconst builder = require( '../builder' );\nconst re = require( '../re' );\nconst mergeConcatClassname = require( '../mergeConcatClassname' );\n\nconst { parseAttr, addLineNumber } = require( './attr' );\nconst { parseGlyph } = require( './glyph' );\nconst { parseHtml, parseHtmlAttr, tokenize, singletons, testComment, testOpenTag } = require( '../html' );\n\nconst { ucaps, txattr, txcite } = require( './re_ext' );\nre.pattern.txattr = txattr;\nre.pattern.txcite = txcite;\nre.pattern.ucaps = ucaps;\n\nconst phraseConvert = {\n  '*': 'strong',\n  '**': 'b',\n  '??': 'cite',\n  '_': 'em',\n  '__': 'i',\n  '-': 'del',\n  '%': 'span',\n  '+': 'ins',\n  '~': 'sub',\n  '^': 'sup',\n  '@': 'code'\n};\n\nconst rePhrase = /^([[{]?)(__?|\\*\\*?|\\?\\?|[-+^~@%])/;\nconst reImage = re.compile( /^!(?!\\s)([:txattr:](?:\\.[^\\n\\S]|\\.(?:[^./]))?)([^!\\s]+?) ?(?:\\(((?:[^()]|\\([^()]+\\))+)\\))?!(?::([^\\s]+?(?=[!-.:-@[\\\\\\]-`{-~](?:$|\\s)|\\s|$)))?/ );\nconst reImageFenced = re.compile( /^\\[!(?!\\s)([:txattr:](?:\\.[^\\n\\S]|\\.(?:[^./]))?)([^!\\s]+?) ?(?:\\(((?:[^()]|\\([^()]+\\))+)\\))?!(?::([^\\s]+?(?=[!-.:-@[\\\\\\]-`{-~](?:$|\\s)|\\s|$)))?\\]/ );\n// NB: there is an exception in here to prevent matching \"TM)\"\nconst reCaps = re.compile( /^((?!TM\\)|tm\\))[[:ucaps:]](?:[[:ucaps:]\\d]{1,}(?=\\()|[[:ucaps:]\\d]{2,}))(?:\\((.*?)\\))?(?=\\W|$)/ );\nconst reLink = re.compile( /^\"(?!\\s)((?:[^\"]|\"(?![\\s:])[^\\n\"]+\"(?!:))+)\"[:txcite:]/ );\nconst reLinkFenced = /^\\[\"([^\\n]+?)\":((?:\\[[a-z0-9]*\\]|[^\\]])+)\\]/;\nconst reLinkTitle = /\\s*\\(((?:\\([^()]*\\)|[^()])+)\\)$/;\nconst reFootnote = /^\\[(\\d+)(!?)\\]/;\n\nfunction parsePhrase ( src, options, charPosToLine, charOffset ) {\n  src = ribbon( src );\n  const list = builder();\n  let m;\n  let pba;\n\n  // loop\n  do {\n    src.save();\n\n    // linebreak -- having this first keeps it from messing to much with other phrases\n    if ( src.startsWith( '\\r\\n' ) ) {\n      src.advance( 1 ); // skip cartridge returns\n    }\n    if ( src.startsWith( '\\n' ) ) {\n      src.advance( 1 );\n      if ( src.startsWith( ' ' ) ) {\n        src.advance( 1 );\n      }\n      else if ( options.breaks ) {\n        list.add( [ 'br' ] );\n      }\n      list.add( '\\n' );\n      continue;\n    }\n\n    // inline notextile\n    if ( ( m = /^==(.*?)==/.exec( src ) ) ) {\n      src.advance( m[0] );\n      list.add( m[1] );\n      continue;\n    }\n\n    const srcSlot = src.getPos();\n\n    // lookbehind => /([\\s>.,\"'?!;:])$/\n    const behind = src.lookbehind( 1 );\n    const boundary = !behind || /^[\\s>.,\"'?!;:()]$/.test( behind );\n    // FIXME: need to test right boundary for phrases as well\n    if ( ( m = rePhrase.exec( src ) ) && ( boundary || m[1] ) ) {\n      src.advance( m[0] );\n      const tok = m[2];\n      const fence = m[1];\n      const phraseType = phraseConvert[tok];\n      const code = phraseType === 'code';\n\n      if ( ( pba = !code && parseAttr( src, phraseType, tok ) ) ) {\n        src.advance( pba[0] );\n        pba = pba[1];\n      }\n      // FIXME: if we can't match the fence on the end, we should output fence-prefix as normal text\n      // seek end\n      let mMid;\n      let mEnd;\n      if ( fence === '[' ) {\n        mMid = '^(.*?)';\n        mEnd = '(?:])';\n      }\n      else if ( fence === '{' ) {\n        mMid = '^(.*?)';\n        mEnd = '(?:})';\n      }\n      else {\n        const t1 = re.escape( tok.charAt( 0 ) );\n        mMid = ( code ) ? '^(\\\\S+|\\\\S+.*?\\\\S)'\n          : `^([^\\\\s${ t1 }]+|[^\\\\s${ t1 }].*?\\\\S(${ t1 }*))`;\n        mEnd = '(?=$|[\\\\s.,\"\\'!?;:()«»„“”‚‘’<>])';\n      }\n      const rx = re.compile( `${ mMid }(${ re.escape( tok ) })${ mEnd }` );\n      // no line number here: they are not block level elements\n      if ( ( m = rx.exec( src ) ) && m[1] ) {\n        const srcPos = src.getPos();\n        src.advance( m[0] );\n        if ( code ) {\n          list.add( [ phraseType, m[1] ] );\n        }\n        else {\n          list.add( [ phraseType, pba ].concat( parsePhrase( m[1], options, charPosToLine, charOffset + srcPos ) ) );\n        }\n        continue;\n      }\n      // else\n      src.load();\n    }\n\n    // image\n    if ( ( m = reImage.exec( src ) ) || ( m = reImageFenced.exec( src ) ) ) {\n      src.advance( m[0] );\n\n      pba = m[1] && parseAttr( m[1], 'img' );\n      const attr = pba ? pba[1] : { 'src': '' };\n      let img = [ 'img', mergeConcatClassname( attr, options.showOriginalLineNumber ? addLineNumber({}, options, charPosToLine, charOffset, srcSlot ) : undefined ) ];\n      attr.src = m[2];\n      attr.alt = m[3] ? ( attr.title = m[3] ) : '';\n\n      if ( m[4] ) { // +cite causes image to be wraped with a link (or link_ref)?\n        // TODO: support link_ref for image cite\n        img = [ 'a', { 'href': m[4] }, img ];\n      }\n      list.add( img );\n      continue;\n    }\n\n    // html comment\n    if ( ( m = testComment( src ) ) ) {\n      const elm = [ '!' ];\n      if ( options.showOriginalLineNumber ) {\n        elm.push( addLineNumber({}, options, charPosToLine, charOffset, src.getSlot() ) );\n      }\n      elm.push( m[1] );\n      list.add( elm );\n      src.advance( m[0] );\n      continue;\n    }\n    // html tag\n    // TODO: this seems to have a lot of overlap with block tags... DRY?\n    if ( ( m = testOpenTag( src ) ) ) {\n      src.advance( m[0] );\n      const srcPos = src.getPos();\n      const tag = m[1];\n      const single = m[3] || m[1] in singletons;\n      let element = [ tag ];\n      const attr = m[2] ? parseHtmlAttr( m[2] ) : undefined;\n\n      if ( single ) { // single tag\n        const pbaLineNumber = options.showOriginalLineNumber ? addLineNumber({}, options, charPosToLine, charOffset, srcSlot ) : undefined;\n        if ( attr ) {\n          element.push( mergeConcatClassname( attr, pbaLineNumber ) );\n        }\n        else if ( pbaLineNumber ) {\n          element.push( pbaLineNumber );\n        }\n        list.add( element ).add( src.skipWS() );\n        continue;\n      }\n      else { // need terminator\n        // gulp up the rest of this block...\n        const reEndTag = re.compile( `^(.*?)(</${ tag }\\\\s*>)`, 's' );\n        if ( ( m = reEndTag.exec( src ) ) ) {\n          const pbaLineNumber = options.showOriginalLineNumber ? addLineNumber({}, options, charPosToLine, charOffset, srcSlot, srcSlot + ( m[0].length > 0 ? m[0].length - 1 : 0 ) ) : undefined;\n          if ( attr ) {\n            element.push( mergeConcatClassname( attr, pbaLineNumber ) );\n          }\n          else if ( pbaLineNumber ) {\n            element.push( pbaLineNumber );\n          }\n\n          src.advance( m[0] );\n          if ( tag === 'code' ) {\n            element.push( m[1] );\n          }\n          else if ( tag === 'notextile' ) {\n            // HTML is still parsed, even though textile is not\n            list.merge( parseHtml( tokenize( m[1] ) ) );\n            continue;\n          }\n          else {\n            element = element.concat( parsePhrase( m[1], options, charPosToLine, charOffset + srcPos ) );\n          }\n          list.add( element );\n          continue;\n        }\n        // end tag is missing, treat tag as normal text...\n      }\n      src.load();\n    }\n\n    // footnote\n    if ( ( m = reFootnote.exec( src ) ) && /\\S/.test( behind ) ) {\n      src.advance( m[0] );\n      list.add( [ 'sup', { 'class': 'footnote', 'id': 'fnr' + m[1] },\n        ( m[2] === '!' ? m[1] // \"!\" suppresses the link\n          : [ 'a', { href: '#fn' + m[1] }, m[1] ] )\n      ] );\n      continue;\n    }\n\n    // caps / abbr\n    if ( ( m = reCaps.exec( src ) ) ) {\n      src.advance( m[0] );\n      let caps = [ 'span', { 'class': 'caps' }, m[1] ];\n      if ( m[2] ) {\n        // FIXME: use <abbr>, not acronym!\n        caps = [ 'acronym', { 'title': m[2] }, caps ];\n      }\n      list.add( caps );\n      continue;\n    }\n\n    // links\n    if ( ( boundary && ( m = reLink.exec( src ) ) ) ||\n                       ( m = reLinkFenced.exec( src ) ) ) {\n      src.advance( m[0] );\n      let title = m[1].match( reLinkTitle );\n      let inner = ( title ) ? m[1].slice( 0, m[1].length - title[0].length ) : m[1];\n      if ( ( pba = parseAttr( inner, 'a' ) ) ) {\n        inner = inner.slice( pba[0] );\n        pba = pba[1];\n      }\n      else {\n        pba = {};\n      }\n      if ( title && !inner ) {\n        inner = title[0];\n        title = '';\n      }\n      pba.href = m[2];\n      if ( title ) { pba.title = title[1]; }\n      // FIXME : small shift, because parsePhrase is called with an inexact offset\n      list.add( [ 'a', pba ].concat( parsePhrase( inner.replace( /^(\\.?\\s*)/, '' ), options, charPosToLine, charOffset + src.getSlot() ) ) );\n      continue;\n    }\n\n    // no match, move by all \"uninteresting\" chars\n    m = /([a-zA-Z0-9,.':]+|[ \\f\\r\\t\\v\\xA0\\u2028\\u2029]+|[^\\0])/.exec( src );\n    if ( m ) {\n      list.add( m[0] );\n    }\n    src.advance( m ? m[0].length || 1 : 1 );\n  }\n  while ( src.valueOf() );\n\n  return list.get().map( parseGlyph );\n}\n\nexports.parsePhrase = parsePhrase;\n","/* eslint camelcase: 0 */\n\nexports.txblocks = '(?:b[qc]|div|notextile|pre|h[1-6]|fn\\\\d+|p|###)';\n\nexports.ucaps = 'A-Z' +\n    // Latin extended À-Þ\n    '\\u00c0-\\u00d6\\u00d8-\\u00de' +\n    // Latin caps with embelishments and ligatures...\n    '\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f' +\n    '\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017b\\u017d' +\n    '\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019c\\u019d\\u019f\\u01a0\\u01a2\\u01a4\\u01a6\\u01a7\\u01a9\\u01ac\\u01ae\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7\\u01b8\\u01bc' +\n    '\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe' +\n    '\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a\\u023b\\u023d\\u023e' +\n    '\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e' +\n    '\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40' +\n    '\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e' +\n    '\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe' +\n    '\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe' +\n    '\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c70\\u2c72\\u2c75\\u2c7e\\u2c7f' +\n    '\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e' +\n    '\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d\\ua77e' +\n    '\\ua780\\ua782\\ua784\\ua786\\ua78b\\ua78d\\ua790\\ua792\\ua7a0\\ua7a2\\ua7a4\\ua7a6\\ua7a8\\ua7aa';\n\nexports.txcite = ':((?:[^\\\\s()]|\\\\([^\\\\s()]+\\\\)|[()])+?)(?=[!-\\\\.:-@\\\\[\\\\\\\\\\\\]-`{-~]+(?:$|\\\\s)|$|\\\\s)';\n\nconst attr_class = exports.attr_class = '\\\\([^\\\\)]+\\\\)';\nconst attr_style = exports.attr_style = '\\\\{[^\\\\}]+\\\\}';\nconst attr_lang = exports.attr_lang = '\\\\[[^\\\\[\\\\]]+\\\\]';\nconst attr_align = exports.attr_align = '(?:<>|<|>|=)';\nconst attr_pad = exports.attr_pad = '[\\\\(\\\\)]+';\n\nconst txattr = exports.txattr = `(?:${ attr_class }|${ attr_style }|${ attr_lang }|${ attr_align }|${ attr_pad })*`;\n\nexports.txlisthd = `[\\\\t ]*[\\\\#\\\\*]*(\\\\*|\\\\#(?:_|\\\\d+)?)${ txattr }(?: +\\\\S|\\\\.\\\\s*(?=\\\\S|\\\\n))`;\n","// merge object b properties into object a\nmodule.exports = function merge ( a, b ) {\n  if ( b ) {\n    for ( const k in b ) {\n      a[ k ] = b[ k ];\n    }\n  }\n  return a;\n};\n","/*\n** JSONML helper methods - http://www.jsonml.org/\n**\n** This provides the `JSONML` object, which contains helper\n** methods for rendering JSONML to HTML.\n**\n** Note that the tag ! is taken to mean comment, this is however\n** not specified in the JSONML spec.\n*/\n\nconst singletons = require( './html' ).singletons;\n\n// drop or add tab levels to JsonML tree\nfunction reIndent ( ml, shiftBy ) {\n  // a bit obsessive, but there we are...\n  if ( !shiftBy ) {\n    return ml;\n  }\n  return ml.map( function ( s ) {\n    if ( /^\\n\\t+/.test( s ) ) {\n      if ( shiftBy < 0 ) {\n        s = s.slice( 0, shiftBy );\n      }\n      else {\n        for ( let i = 0; i < shiftBy; i++ ) {\n          s += '\\t';\n        }\n      }\n    }\n    else if ( Array.isArray( s ) ) {\n      return reIndent( s, shiftBy );\n    }\n    return s;\n  });\n}\n\nfunction escape ( text, escapeQuotes ) {\n  return text.replace( /&(?!(#\\d{2,}|#x[\\da-fA-F]{2,}|[a-zA-Z][a-zA-Z1-4]{1,6});)/g, '&amp;' )\n    .replace( /</g, '&lt;' )\n    .replace( />/g, '&gt;' )\n    .replace( /\"/g, escapeQuotes ? '&quot;' : '\"' )\n    .replace( /'/g, escapeQuotes ? '&#39;' : \"'\" );\n}\n\nfunction toHTML ( jsonml, renderers ) {\n  jsonml = jsonml.concat();\n\n  // basic case\n  if ( typeof jsonml === 'string' ) {\n    return escape( jsonml );\n  }\n\n  const tag = jsonml.shift();\n  let attributes = {};\n  let tagAttrs = '';\n  const content = [];\n\n  if ( jsonml.length && typeof jsonml[0] === 'object' && !Array.isArray( jsonml[0] ) ) {\n    attributes = jsonml.shift();\n  }\n\n  while ( jsonml.length ) {\n    content.push( toHTML( jsonml.shift(), renderers ) );\n  }\n\n  let realContent = content.join( '' );\n  if ( Array.isArray( renderers ) ) {\n    renderers.forEach( render => {\n      realContent = render( tag, attributes, realContent );\n    });\n  }\n\n  for ( const a in attributes ) {\n    tagAttrs += ( attributes[a] == null )\n      ? ` ${ a }`\n      : ` ${ a }=\"${ escape( String( attributes[a] ), true ) }\"`;\n  }\n\n  // be careful about adding whitespace here for inline elements\n  if ( tag === '!' ) {\n    return `<!--${ realContent }-->`;\n  }\n  else if ( tag in singletons || ( tag.indexOf( ':' ) > -1 && !realContent.length ) ) {\n    return `<${ tag }${ tagAttrs } />`;\n  }\n  else {\n    return `<${ tag }${ tagAttrs }>${ realContent }</${ tag }>`;\n  }\n}\n\nfunction applyHooks ( ml, hooks = [], level = undefined ) {\n  if ( Array.isArray( ml ) && Array.isArray( hooks ) && hooks.length ) {\n    let realLevel = +level || 0;\n    for ( let i = 0, l = hooks.length; i < l; i++ ) {\n      const hook = hooks[i];\n      hook[0]( ml, hook[1], realLevel );\n    }\n    realLevel++;\n    for ( let i = 0, l = ml.length; i < l; i++ ) {\n      if ( Array.isArray( ml[i] ) ) {\n        applyHooks( ml[i], hooks, realLevel );\n      }\n    }\n  }\n  return ml;\n}\n\nfunction isNode ( ml ) {\n  return Array.isArray( ml ) && typeof ml[0] === 'string';\n};\n\nfunction isAttributes ( mlPart ) {\n  return typeof mlPart === 'object' && !Array.isArray( mlPart );\n};\n\nfunction hasAttributes ( ml ) {\n  if ( !isNode( ml ) ) {\n    throw new Error( 'Not a jsonML node' );\n  }\n\n  return isAttributes( ml[1] );\n};\n\nfunction addAttributes ( ml, newAttr ) {\n  if ( hasAttributes( ml ) ) {\n    return Object.assign( ml[1], newAttr );\n  }\n  else {\n    const attr = Object.assign({}, newAttr );\n    ml.splice( 1, 0, attr );\n\n    return attr;\n  }\n};\n\nmodule.exports = {\n  reIndent: reIndent,\n  toHTML: toHTML,\n  escape: escape,\n  applyHooks: applyHooks,\n  addAttributes: addAttributes\n};\n","/*\n** textile flow content parser\n*/\nconst builder = require( '../builder' );\nconst ribbon = require( '../ribbon' );\nconst re = require( '../re' );\nconst fixLink = require( '../fixlinks' );\nconst jsonml = require( '../jsonml' );\n\nconst { parseHtml, tokenize, parseHtmlAttr, singletons, testComment, testOpenTagBlock } = require( '../html' );\n\nconst { parsePhrase } = require( './phrase' );\nconst { copyAttr, parseAttr, addLineNumber } = require( './attr' );\nconst { testList, parseList } = require( './list' );\nconst { testDefList, parseDefList } = require( './deflist' );\nconst { testTable, parseTable } = require( './table' );\n\nconst { txblocks, txlisthd, txattr } = require( './re_ext' );\nre.pattern.txblocks = txblocks;\nre.pattern.txlisthd = txlisthd;\nre.pattern.txattr = txattr;\n\n// HTML tags allowed in the document (root) level that trigger HTML parsing\nconst allowedBlocktags = {\n  'p': 0,\n  'hr': 0,\n  'ul': 1,\n  'ol': 0,\n  'li': 0,\n  'div': 1,\n  'pre': 0,\n  'object': 1,\n  'script': 0,\n  'noscript': 0,\n  'blockquote': 1,\n  'notextile': 1\n};\n\nconst reBlock = re.compile( /^([:txblocks:])/ );\nconst reBlockNormal = re.compile( /^(.*?)($|\\r?\\n(?=[:txlisthd:])|\\r?\\n(?:\\s*\\n|$)+)/, 's' );\nconst reBlockExtended = re.compile( /^(.*?)($|\\r?\\n(?=[:txlisthd:])|\\r?\\n+(?=[:txblocks:][:txattr:]\\.))/, 's' );\nconst reBlockNormalPre = re.compile( /^(.*?)($|\\r?\\n(?:\\s*\\n|$)+)/, 's' );\nconst reBlockExtendedPre = re.compile( /^(.*?)($|\\r?\\n+(?=[:txblocks:][:txattr:]\\.))/, 's' );\n\nconst reRuler = /^(---+|\\*\\*\\*+|___+)(\\r?\\n\\s+|$)/;\nconst reLinkRef = re.compile( /^\\[([^\\]]+)\\]((?:https?:\\/\\/|\\/)\\S+)(?:\\s*\\n|$)/ );\nconst reFootnoteDef = /^fn\\d+$/;\n\nconst reCleanBegin = /^( *\\r?\\n)+/;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\nfunction extend ( target, ...args ) {\n  for ( let i = 1; i < args.length; i++ ) {\n    const src = args[i];\n    if ( src != null ) {\n      for ( const nextKey in src ) {\n        if ( hasOwn.call( src, nextKey ) ) {\n          target[nextKey] = src[nextKey];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nfunction paragraph ( s, tag, pba, linebreak, options, charPosToLine, charOffset ) {\n  tag = tag || 'p';\n  let out = [];\n  // FIXME : this may need some work for correct offset computation\n  s.split( /(?:\\r?\\n){2,}/ ).forEach( function ( bit, i ) {\n    if ( tag === 'p' && /^\\s/.test( bit ) ) {\n      // no-paragraphs\n      let localCharOffset = 0;\n      if ( options.showOriginalLineNumber ) {\n        const removedSrc = bit.match( /^(\\r?\\n|\\t| )*/g );\n        if ( removedSrc && removedSrc[0] ) {\n          localCharOffset += removedSrc[0].length;\n        }\n      }\n      bit = bit.replace( /\\r?\\n[\\t ]/g, ' ' ).trim();\n      out = out.concat( parsePhrase( bit, options, charPosToLine, charOffset + localCharOffset ) );\n    }\n    else {\n      if ( linebreak && i ) { out.push( linebreak ); }\n      out.push( pba ? [ tag, pba ].concat( parsePhrase( bit, options, charPosToLine, charOffset ) )\n        : [ tag ].concat( parsePhrase( bit, options, charPosToLine, charOffset ) ) );\n    }\n  });\n  return out;\n};\n\nfunction computeCharOffset ( src, options, lineOffset ) {\n  if ( options.showOriginalLineNumber ) {\n    lineOffset = lineOffset || 0;\n\n    const removedSrc = src.match( reCleanBegin );\n    if ( removedSrc && removedSrc[0] ) {\n      lineOffset += ( removedSrc[0].match( /\\n/g ) || [] ).length;\n    }\n    return lineOffset;\n  }\n  else {\n    return 0;\n  }\n}\n\nfunction storeCharPosToLine ( src, options, charOffset ) {\n  // FIXME: don't store all chr ?\n  if ( options.showOriginalLineNumber ) {\n    const charPosToLine = [];\n    const realSrc = src.toString();\n    for ( const i in realSrc ) {\n      charPosToLine[ i ] = charOffset;\n      if ( realSrc[ i ] === '\\n' ) {\n        charOffset++;\n      }\n    }\n    return charPosToLine;\n  }\n  else {\n    return void 0;\n  }\n}\n\nfunction parseFlow ( src, options, lineOffset ) {\n  const list = builder();\n\n  let linkRefs;\n  let m;\n\n  // keep as local variable, for nested calls (->block HTML)\n  const charLineOffset = computeCharOffset( src, options, lineOffset );\n\n  src = ribbon( src.replace( reCleanBegin, '' ) );\n\n  // keep as local variable, for nested calls (->block HTML)\n  const charPosToLine = storeCharPosToLine( src, options, charLineOffset );\n\n  // loop\n  while ( src.valueOf() ) {\n    // Fix for #52\n    const garbage = reCleanBegin.exec( src );\n    if ( garbage && garbage[0] ) {\n      src.advance( garbage[0].length );\n    }\n\n    src.save();\n\n    // Further fix for #52 : Nothing more should be done, if we have reached end of stream.\n    // This removes a useless empty <P> at the end of the generated tree.\n    if ( !src.valueOf() ) {\n      break;\n    }\n\n    // link_ref -- this goes first because it shouldn't trigger a linebreak\n    if ( ( m = reLinkRef.exec( src ) ) ) {\n      if ( !linkRefs ) { linkRefs = {}; }\n      src.advance( m[0] );\n      linkRefs[m[1]] = m[2];\n      continue;\n    }\n\n    // add linebreak\n    list.linebreak();\n\n    // named block\n    if ( ( m = reBlock.exec( src ) ) ) {\n      src.advance( m[0] );\n      const blockType = m[0];\n      let pba = parseAttr( src, blockType );\n\n      if ( pba ) {\n        src.advance( pba[0] );\n        pba = pba[1];\n      }\n      pba = addLineNumber( pba, options, charPosToLine, 0, src.getSlot() );\n      if ( ( m = /^\\.(\\.?)(?:\\s|(?=:))/.exec( src ) ) ) {\n        // FIXME: this whole copyAttr seems rather strange?\n        // slurp rest of block\n        const extended = !!m[1];\n        let reBlockGlob = ( extended ? reBlockExtended : reBlockNormal );\n        if ( blockType === 'bc' || blockType === 'pre' ) {\n          reBlockGlob = ( extended ? reBlockExtendedPre : reBlockNormalPre );\n        }\n        m = reBlockGlob.exec( src.advance( m[0] ) );\n        src.advance( m[0] );\n        // bq | bc | notextile | pre | h# | fn# | p | ###\n        if ( blockType === 'bq' ) {\n          let inner = m[1];\n          if ( ( m = /^:(\\S+)\\s+/.exec( inner ) ) ) {\n            if ( !pba ) { pba = {}; }\n            pba.cite = m[1];\n            inner = inner.slice( m[0].length );\n          }\n          // RedCloth adds all attr to both: this is bad because it produces duplicate IDs\n          const par = paragraph( inner, 'p', copyAttr( pba, { 'cite': 1, 'id': 1 }), '\\n', options, src.getSlot() );\n          list.add( [ 'blockquote', pba, '\\n' ].concat( par ).concat( [ '\\n' ] ) );\n        }\n        else if ( blockType === 'bc' ) {\n          const subPba = ( pba ) ? copyAttr( pba, { 'id': 1 }) : null;\n          list.add( [ 'pre', pba, ( subPba ? [ 'code', subPba, m[1] ] : [ 'code', m[1] ] ) ] );\n        }\n        else if ( blockType === 'notextile' ) {\n          list.merge( parseHtml( tokenize( m[1] ) ) );\n        }\n        else if ( blockType === '###' ) {\n          // ignore the insides\n        }\n        else if ( blockType === 'pre' ) {\n          // I disagree with RedCloth, but agree with PHP here:\n          // \"pre(foo#bar).. line1\\n\\nline2\" prevents multiline preformat blocks\n          // ...which seems like the whole point of having an extended pre block?\n          list.add( [ 'pre', pba, m[1] ] );\n        }\n        else if ( reFootnoteDef.test( blockType ) ) { // footnote\n          // Need to be careful: RedCloth fails \"fn1(foo#m). footnote\" -- it confuses the ID\n          const fnid = blockType.replace( /\\D+/g, '' );\n          if ( !pba ) { pba = {}; }\n          pba.class = ( pba['class'] ? pba['class'] + ' ' : '' ) + 'footnote';\n          pba.id = 'fn' + fnid;\n          list.add( [ 'p', pba, [ 'a', { 'href': '#fnr' + fnid }, [ 'sup', fnid ] ], ' ' ]\n            .concat( parsePhrase( m[1], options, charPosToLine, src.getSlot() ) ) );\n        }\n        else { // heading | paragraph\n          list.merge( paragraph( m[1], blockType, pba, '\\n', options, charPosToLine, src.getSlot() ) );\n        }\n        continue;\n      }\n      else {\n        src.load();\n      }\n    }\n\n    // HTML comment\n    if ( ( m = testComment( src ) ) ) {\n      const elm = [ '!' ];\n      if ( options.showOriginalLineNumber ) {\n        elm.push( addLineNumber({}, options, charPosToLine, 0, src.getSlot() ) );\n      }\n      elm.push( m[1] );\n      list.add( elm );\n      src.advance( m[0] + ( /(?:\\s*\\n+)+/.exec( src ) || [] )[0] );\n      continue;\n    }\n\n    // block HTML\n    if ( ( m = testOpenTagBlock( src ) ) ) {\n      const tag = m[1];\n\n      // Is block tag? ...\n      if ( tag in allowedBlocktags ) {\n        if ( m[3] || tag in singletons ) { // single?\n          const srcSlot = src.getSlot();\n          src.advance( m[0] );\n          if ( /^\\s*(\\n|$)/.test( src ) ) {\n            const elm = [ tag ];\n            if ( options.showOriginalLineNumber ) {\n              elm.push( addLineNumber( m[2] ? parseHtmlAttr( m[2] ) : {}, options, charPosToLine, 0, srcSlot ) );\n            }\n            else {\n              if ( m[2] ) {\n                elm.push( parseHtmlAttr( m[2] ) );\n              }\n            }\n            list.add( elm );\n            src.skipWS();\n            continue;\n          }\n        }\n        else if ( tag === 'pre' ) {\n          const t = tokenize( src, { 'pre': 1, 'code': 1 }, tag );\n          if ( options.showOriginalLineNumber ) {\n            t[0].attr = addLineNumber( t[0].attr, options, charPosToLine, 0, src.getSlot() );\n          }\n          const p = parseHtml( t, true );\n          src.load().advance( p.sourceLength );\n          if ( /^\\s*(\\n|$)/.test( src ) ) {\n            list.merge( p );\n            src.skipWS(); // skip tailing whitespace\n            continue;\n          }\n        }\n        else if ( tag === 'notextile' ) {\n          // merge all child elements\n          const t = tokenize( src, null, tag );\n          // it's not possible to addLineNumber here (no tag)\n          let s = 1; // start after open tag\n          while ( /^\\s+$/.test( t[s].src ) ) {\n            s++; // skip whitespace\n          }\n          const p = parseHtml( t.slice( s, -1 ), true );\n          const x = t.pop();\n          src.load().advance( x.pos + x.src.length );\n          if ( /^\\s*(\\n|$)/.test( src ) ) {\n            list.merge( p );\n            src.skipWS(); // skip tailing whitespace\n            continue;\n          }\n        }\n        else {\n          src.skipWS();\n          const t = tokenize( src, null, tag );\n          const srcSlot = src.getSlot();\n          const x = t.pop(); // this should be the end tag\n          let s = 1; // start after open tag\n          while ( t[s] && /^[\\n\\r]+$/.test( t[s].src ) ) {\n            s++; // skip whitespace\n          }\n          if ( x.tag === tag ) {\n            // inner can be empty\n            const inner = ( t.length > 1 ) ? src.slice( t[s].pos, x.pos ) : '';\n            src.advance( x.pos + x.src.length );\n            if ( /^\\s*(\\n|$)/.test( src ) ) {\n              let elm = [ tag ];\n              if ( options.showOriginalLineNumber ) {\n                elm.push( addLineNumber( m[2] ? parseHtmlAttr( m[2] ) : {}, options, charPosToLine, 0, srcSlot, src.getPos() - 1 ) );\n              }\n              else {\n                if ( m[2] ) {\n                  elm.push( parseHtmlAttr( m[2] ) );\n                }\n              }\n              if ( tag === 'script' || tag === 'style' ) {\n                elm.push( inner );\n              }\n              else {\n                let localCharOffset = ( ( t.length > 1 ) ? t[s].pos : 0 );\n                if ( options.showOriginalLineNumber ) {\n                  const removedSrc = inner.match( /^\\n+/ );\n                  if ( removedSrc && removedSrc[0] ) {\n                    localCharOffset += removedSrc[0].length;\n                  }\n                }\n                const innerHTML = inner.replace( /^\\n+/, '' ).replace( /\\s*$/, '' );\n                const isBlock = /\\n\\r?\\n/.test( innerHTML ) || tag === 'ol' || tag === 'ul';\n                const innerElm = isBlock\n                  ? parseFlow( innerHTML, options, charPosToLine ? charPosToLine[ srcSlot + localCharOffset ] : undefined )\n                  : parsePhrase( innerHTML, extend({}, options, { breaks: false }), charPosToLine, srcSlot + localCharOffset );\n                if ( isBlock || /^\\n/.test( inner ) ) {\n                  elm.push( '\\n' );\n                }\n                if ( isBlock || /\\s$/.test( inner ) ) {\n                  innerElm.push( '\\n' );\n                }\n                elm = elm.concat( innerElm );\n              }\n\n              list.add( elm );\n              src.skipWS(); // skip tailing whitespace\n              continue;\n            }\n          }\n        }\n      }\n      src.load();\n    }\n\n    // ruler\n    if ( ( m = reRuler.exec( src ) ) ) {\n      const elm = [ 'hr' ];\n      if ( options.showOriginalLineNumber ) {\n        elm.push( addLineNumber({}, options, charPosToLine, 0, src.getSlot() ) );\n      }\n      src.advance( m[0] );\n      list.add( elm );\n      continue;\n    }\n\n    // list\n    if ( ( m = testList( src ) ) ) {\n      src.advance( m[0] );\n      list.add( parseList( m[0], options, charPosToLine, src.getSlot() ) );\n      continue;\n    }\n\n    // definition list\n    if ( ( m = testDefList( src ) ) ) {\n      src.advance( m[0] );\n      list.add( parseDefList( m[0], options, charPosToLine, src.getSlot() ) );\n      continue;\n    }\n\n    // table\n    if ( ( m = testTable( src ) ) ) {\n      src.advance( m[0] );\n      list.add( parseTable( m[1], options, charPosToLine, src.getSlot() ) );\n      continue;\n    }\n\n    // paragraph\n    m = reBlockNormal.exec( src );\n    list.merge( paragraph( m[1], 'p', addLineNumber({}, options, charPosToLine, 0, src.getSlot() ), '\\n', options, charPosToLine, src.getSlot() ) );\n    src.advance( m[0] );\n  }\n\n  let hooks = linkRefs ? [ [fixLink, linkRefs] ] : [];\n  if ( options.hooks && Array.isArray( options.hooks ) ) {\n    hooks = hooks.concat( options.hooks );\n  }\n  return jsonml.applyHooks( list.get(), hooks );\n  // return linkRefs ? fixLinks( list.get(), linkRefs ) : list.get();\n}\n\nexports.parseFlow = parseFlow;\n","module.exports = function builder ( initArr ) {\n  const arr = Array.isArray( initArr ) ? initArr : [];\n\n  return {\n    add: function ( node ) {\n      if ( typeof node === 'string' &&\n           typeof arr[ arr.length - 1 ] === 'string' ) {\n        // join if possible\n        arr[ arr.length - 1 ] += node;\n      }\n      else if ( Array.isArray( node ) ) {\n        arr.push( node.filter( s => s !== undefined ) );\n      }\n      else if ( node ) {\n        arr.push( node );\n      }\n      return this;\n    },\n\n    merge: function ( arr ) {\n      for ( let i = 0, l = arr.length; i < l; i++ ) {\n        this.add( arr[i] );\n      }\n      return this;\n    },\n\n    linebreak: function () {\n      if ( arr.length ) {\n        this.add( '\\n' );\n      }\n    },\n\n    get: function () {\n      return arr;\n    }\n  };\n};\n","/*\n** Textile parser for JavaScript\n**\n** Copyright (c) 2012 Borgar Þorsteinsson (MIT License).\n**\n*/\n\nconst merge = require( './merge' );\nconst jsonmlUtils = require( './jsonml' );\nconst { parseFlow } = require( './textile/flow' );\nconst { parseHtml } = require( './html' );\n\nfunction textile ( txt, opt ) {\n  // get a throw-away copy of options\n  opt = merge( merge({}, textile.defaults ), opt || {});\n  // run the converter\n  return parseFlow( txt, opt, opt.lineOffset ).map( ( value ) => jsonmlUtils.toHTML( value, opt.renderers ) ).join( '' );\n};\nmodule.exports = textile;\n\n// options\ntextile.defaults = {\n  // single-line linebreaks are converted to <br> by default\n  'breaks': true,\n  // by default, don't map the elements of HTML output, with the line numbers of input text\n  'showOriginalLineNumber': false,\n  // line number offset of the first char of input text, for showOriginalLineNumber option\n  'lineOffset': 0,\n  // by default, don't set a special CSS class name to each HTML element mapped to an original line number\n  'cssClassOriginalLineNumber': '',\n  // functions to apply to each JsonML node before rendering to HTML\n  'hooks': [],\n  // function called where a JsonML node is rendered to HTML\n  'renderers': {}\n};\ntextile.setOptions = textile.setoptions = function ( opt ) {\n  merge( textile.defaults, opt );\n  return this;\n};\n\ntextile.parse = textile.convert = textile;\ntextile.html_parser = parseHtml;\n\ntextile.tokenize = function ( txt, opt ) {\n  // get a throw-away copy of options\n  opt = merge( merge({}, textile.defaults ), opt || {});\n  // parse and return tree\n  return parseFlow( txt, opt, opt.lineOffset );\n};\ntextile.jsonml = function ( txt, opt ) {\n  // parse and return tree\n  return [ 'html' ].concat( textile.tokenize( txt, opt ) );\n};\ntextile.serialize = function ( jsonml, opt ) {\n  // get a throw-away copy of options\n  opt = merge( merge({}, textile.defaults ), opt || {});\n  // serialize\n  return jsonmlUtils.toHTML( jsonml, opt.renderers );\n};\n\ntextile.jsonmlUtils = jsonmlUtils;\n","// recurse the tree and swap out any \"href\" attributes\n// this uses the context as the replace dictionary so it can be fed to Array#map\nmodule.exports = function fixLink ( ml, dict ) {\n  if ( Array.isArray( ml ) ) {\n    if ( ml[0] === 'a' ) { // found a link\n      const attr = ml[1];\n      if ( typeof attr === 'object' && 'href' in attr && attr.href in dict ) {\n        attr.href = dict[attr.href];\n      }\n    }\n  }\n  return ml;\n};\n","// merge object b properties into object a, and concat class names\nmodule.exports = function mergeConcatClassName ( a, b ) {\n  if ( b ) {\n    for ( const k in b ) {\n      if ( k === 'class' ) {\n        a[ k ] = ( a[ k ] ? a[ k ] + ' ' : '' ) + b[ k ];\n      }\n      else {\n        a[ k ] = b[ k ];\n      }\n    }\n  }\n  return a;\n};\n","/* textile glyph parser */\n\nconst re = require( '../re' );\n\nconst reApostrophe = /(\\w)'(\\w)/g;\nconst reArrow = /([^-]|^)->/;\nconst reClosingDQuote = re.compile( /([^\\s[(])\"(?=$|\\s|[:punct:])/g );\nconst reClosingSQuote = re.compile( /([^\\s[(])'(?=$|\\s|[:punct:])/g );\nconst reCopyright = /(\\b ?|\\s|^)(?:\\(C\\)|\\[C\\])/gi;\nconst reDimsign = /([\\d.,]+['\"]? ?)x( ?)(?=[\\d.,]['\"]?)/g;\nconst reDoublePrime = re.compile( /(\\d*[.,]?\\d+)\"(?=\\s|$|[:punct:])/g );\nconst reEllipsis = /([^.]?)\\.{3}/g;\nconst reEmdash = /(^|[\\s\\w])--([\\s\\w]|$)/g;\nconst reEndash = / - /g;\nconst reOpenDQuote = /\"/g;\nconst reOpenSQuote = /'/g;\nconst reRegistered = /(\\b ?|\\s|^)(?:\\(R\\)|\\[R\\])/gi;\nconst reSinglePrime = re.compile( /(\\d*[.,]?\\d+)'(?=\\s|$|[:punct:])/g );\nconst reTrademark = /(\\b ?|\\s|^)(?:\\((?:TM|tm)\\)|\\[(?:TM|tm)\\])/g;\n\nexports.parseGlyph = function parseGlyph ( src ) {\n  if ( typeof src !== 'string' ) {\n    return src;\n  }\n  // NB: order is important here ...\n  return src\n    .replace( reArrow, '$1&#8594;' )\n    .replace( reDimsign, '$1&#215;$2' )\n    .replace( reEllipsis, '$1&#8230;' )\n    .replace( reEmdash, '$1&#8212;$2' )\n    .replace( reEndash, ' &#8211; ' )\n    .replace( reTrademark, '$1&#8482;' )\n    .replace( reRegistered, '$1&#174;' )\n    .replace( reCopyright, '$1&#169;' )\n    // double quotes\n    .replace( reDoublePrime, '$1&#8243;' )\n    .replace( reClosingDQuote, '$1&#8221;' )\n    .replace( reOpenDQuote, '&#8220;' )\n    // single quotes\n    .replace( reSinglePrime, '$1&#8242;' )\n    .replace( reApostrophe, '$1&#8217;$2' )\n    .replace( reClosingSQuote, '$1&#8217;' )\n    .replace( reOpenSQuote, '&#8216;' )\n    // fractions and degrees\n    .replace( /[([]1\\/4[\\])]/, '&#188;' )\n    .replace( /[([]1\\/2[\\])]/, '&#189;' )\n    .replace( /[([]3\\/4[\\])]/, '&#190;' )\n    .replace( /[([]o[\\])]/, '&#176;' )\n    .replace( /[([]\\+\\/-[\\])]/, '&#177;' );\n};\n","/* textile list parser */\nconst ribbon = require( '../ribbon' );\nconst re = require( '../re' );\nconst merge = require( '../merge' );\n\nconst { parseAttr, addLineNumber } = require( './attr' );\nconst { parsePhrase } = require( './phrase' );\n\nconst { txlisthd } = require( './re_ext' );\nre.pattern.txlisthd = txlisthd;\nconst reList = re.compile( /^((?:[:txlisthd:][^\\0]*?(?:\\r?\\n|$))+)(\\s*\\n|$)/, 's' );\nconst reItem = re.compile( /^([#*]+)([^\\0]+?)(\\n(?=[:txlisthd:])|$)/, 's' );\n\nfunction listPad ( n ) {\n  let s = '\\n';\n  while ( n-- ) {\n    s += '\\t';\n  }\n  return s;\n}\n\nfunction testList ( src ) {\n  return reList.exec( src );\n}\n\nfunction parseList ( src, options, charPosToLine, charOffset ) {\n  if ( options.showOriginalLineNumber ) {\n    const removedSrc = src.match( /(^|\\r?\\n)[\\t ]+/ );\n    if ( removedSrc && removedSrc[0] ) {\n      charOffset += removedSrc[0].length;\n    }\n  }\n  src = ribbon( src.replace( /(^|\\r?\\n)[\\t ]+/, '$1' ) );\n\n  const stack = [];\n  const currIndex = {};\n  const lastIndex = options._lst || {};\n  let itemIndex = 0;\n  let listAttr;\n  let m;\n  let n;\n  let s;\n\n  while ( ( m = reItem.exec( src ) ) ) {\n    const item = [ 'li' ];\n    const destLevel = m[1].length;\n    const type = ( m[1].substr( -1 ) === '#' ) ? 'ol' : 'ul';\n    let newLi = null;\n    let lst;\n    let par;\n    let pba;\n    let r;\n\n    // list starts and continuations\n    if ( ( n = /^(_|\\d+)/.exec( m[2] ) ) ) {\n      itemIndex = isFinite( n[1] )\n        ? parseInt( n[1], 10 )\n        : lastIndex[ destLevel ] || currIndex[ destLevel ] || 1;\n      m[2] = m[2].slice( n[1].length );\n    }\n\n    if ( ( pba = parseAttr( m[2], 'li' ) ) ) {\n      m[2] = m[2].slice( pba[0] );\n      pba = pba[1];\n    }\n\n    const pbaLineNumber = addLineNumber({}, options, charPosToLine, charOffset, src.getPos() );\n\n    // list control\n    if ( /^\\.\\s*$/.test( m[2] ) ) {\n      listAttr = pba || {};\n      src.advance( m[0] );\n      continue;\n    }\n\n    // create nesting until we have correct level\n    while ( stack.length < destLevel ) {\n      // list always has an attribute object, this simplifies first-pba resolution\n      lst = [ type, {}, listPad( stack.length + 1 ), ( newLi = [ 'li' ] ) ];\n      par = stack[ stack.length - 1 ];\n      if ( par ) {\n        par.li.push( listPad( stack.length ) );\n        par.li.push( lst );\n      }\n      stack.push({\n        ul: lst,\n        li: newLi,\n        // count attributes's found per list\n        att: 0,\n        pbaLineNumber: pbaLineNumber\n      });\n      currIndex[ stack.length ] = 1;\n    }\n\n    // remove nesting until we have correct level\n    while ( stack.length > destLevel ) {\n      r = stack.pop();\n      r.ul.push( listPad( stack.length ) );\n      // lists have a predictable structure - move pba from listitem to list\n      if ( r.att === 1 && !r.ul[3][1].substr ) {\n        merge( r.ul[1], r.ul[3].splice( 1, 1 )[ 0 ] );\n      }\n    }\n\n    // parent list\n    par = stack[ stack.length - 1 ];\n\n    if ( itemIndex ) {\n      par.ul[1].start = itemIndex;\n      currIndex[destLevel] = itemIndex;\n      // falsy prevents this from fireing until it is set again\n      itemIndex = 0;\n    }\n    if ( listAttr ) {\n      // \"more than 1\" prevent attribute transfers on list close\n      par.att = 9;\n      merge( par.ul[1], listAttr );\n      listAttr = null;\n    }\n\n    if ( !newLi ) {\n      par.ul.push( listPad( stack.length ), item );\n      par.li = item;\n    }\n    if ( pba ) {\n      par.li.push( merge( pba, pbaLineNumber ) );\n      par.att++;\n    }\n    else {\n      par.li.push( pbaLineNumber );\n    }\n    Array.prototype.push.apply( par.li, parsePhrase( m[2].trim(), options, charPosToLine, charOffset ) );\n\n    src.advance( m[0] );\n    currIndex[destLevel] = ( currIndex[destLevel] || 0 ) + 1;\n  }\n\n  // remember indexes for continuations next time\n  options._lst = currIndex;\n\n  while ( stack.length ) {\n    s = stack.pop();\n    s.ul.push( listPad( stack.length ) );\n    // lists have a predictable structure - move pba from listitem to list\n    if ( s.att === 1 && !s.ul[3][1].substr ) {\n      merge( s.ul[1], s.ul[3].splice( 1, 1 )[0] );\n    }\n    // line number should stay on listitem\n    if ( typeof ( s.ul[3][1] ) === 'object' ) {\n      merge( s.ul[3][1], s.pbaLineNumber );\n    }\n    else {\n      s.ul[3].splice( 1, 0, s.pbaLineNumber );\n    }\n  }\n\n  return s.ul;\n}\n\nmodule.exports = {\n  testList: testList,\n  parseList: parseList\n};\n","/* definitions list parser */\n\nconst ribbon = require( '../ribbon' );\n\nconst { addLineNumber } = require( './attr' );\n\nconst reDeflist = /^((?:- (?:[^\\n]\\n?)+?)+:=(?: *\\n[^\\0]+?=:(?:\\n|$)|(?:[^\\0]+?(?:$|\\n(?=\\n|- )))))+/;\nconst reItem = /^((?:- (?:[^\\n]\\n?)+?)+):=( *\\n[^\\0]+?=:\\s*(?:\\n|$)|(?:[^\\0]+?(?:$|\\n(?=\\n|- ))))/;\n\nfunction testDefList ( src ) {\n  return reDeflist.exec( src );\n}\n\nfunction parseDefList ( src, options, charPosToLine, charOffset ) {\n  if ( options.showOriginalLineNumber ) {\n    const removedSrc = src.match( /^\\s+/ );\n    if ( removedSrc && removedSrc[0] ) {\n      charOffset += removedSrc[0].length;\n    }\n  }\n  src = ribbon( src.trim() );\n\n  // late loading to get around the lack of non-circular-dependency support in RequireJS\n  const parsePhrase = require( './phrase' ).parsePhrase;\n  const parseFlow = require( './flow' ).parseFlow;\n\n  const deflist = [ 'dl', '\\n' ];\n  let terms;\n  let def;\n  let m;\n\n  while ( ( m = reItem.exec( src ) ) ) {\n    // add terms\n    terms = m[1].split( /(?:^|\\n)- / );\n    let localCharOffset = terms[0].length;\n    terms = terms.slice( 1 );\n    let separators = [];\n    if ( options.showOriginalLineNumber ) {\n      separators = m[1].match( /(?:^|\\n)- /g ).slice( 1 );\n    }\n    while ( terms.length ) {\n      const term = terms.shift();\n      deflist.push( '\\t'\n        , [ 'dt' ].concat(\n          addLineNumber({}, options, charPosToLine, charOffset, src.getPos() + localCharOffset )\n          , parsePhrase( term.trim(), options, charPosToLine, charOffset ) )\n        , '\\n'\n      );\n      if ( options.showOriginalLineNumber ) {\n        localCharOffset += term.length;\n        // perhaps no separator at the end of the list\n        if ( separators.length ) {\n          localCharOffset += separators.shift().length;\n        }\n      }\n    }\n    // add definitions\n    def = m[2].trim();\n    if ( options.showOriginalLineNumber ) {\n      // rebase local char offset, and add +2 for ':=' between term and definition\n      localCharOffset = m[1].length + 2;\n\n      const removedSrc = m[2].match( /^\\s+/ );\n      if ( removedSrc && removedSrc[0] ) {\n        localCharOffset += removedSrc[0].length;\n      }\n    }\n    deflist.push( '\\t'\n      , [ 'dd' ].concat(\n        addLineNumber({}, options, charPosToLine, charOffset, src.getPos() + localCharOffset )\n        , ( /=:$/.test( def ) )\n          ? parseFlow( def.slice( 0, -2 ).trim(), options, options.showOriginalLineNumber ? charPosToLine[ ( charOffset || 0 ) + localCharOffset + src.getPos() ] : 0 )\n          : parsePhrase( def, options, charPosToLine, ( charOffset || 0 ) + localCharOffset + src.getPos() )\n      )\n      , '\\n'\n    );\n    src.advance( m[0] );\n  }\n  return deflist;\n}\n\nexports.testDefList = testDefList;\nexports.parseDefList = parseDefList;\n","/* textile table parser */\n\nconst re = require( '../re' );\nconst merge = require( '../merge' );\nconst ribbon = require( '../ribbon' );\n\nconst { parseAttr, addLineNumber } = require( './attr' );\nconst { parsePhrase } = require( './phrase' );\nconst { reIndent } = require( '../jsonml' );\n\nconst { txattr } = require( './re_ext' );\nre.pattern.txattr = txattr;\n\nconst reTable = re.compile( /^((?:table[:txattr:]\\.(?:\\s(.+?))\\s*\\n)?(?:(?:[:txattr:]\\.[^\\n\\S]*)?\\|.*?\\|[^\\n\\S]*(?:\\n|$))+)([^\\n\\S]*\\n)?/, 's' );\nconst reHead = /^table(_?)([^\\n]*?)\\.(?:[ \\t](.+?))?\\s*\\n/;\nconst reRowCapture = re.compile( /^(\\|([~^-][:txattr:])\\.\\s*\\n)?([:txattr:]\\.[^\\n\\S]*)?(\\|)(.*?)\\|[^\\n\\S]*(\\n|$)/, 's' );\nconst reCaption = /^\\|=([^\\n+]*)\\n/;\nconst reColgroup = /^\\|:([^\\n+]*)\\|[\\r\\t ]*\\n/;\nconst reRowgroup = /^\\|([\\^\\-~])([^\\n+]*)\\.[ \\t\\r]*\\n/;\n\nconst charToTag = {\n  '^': 'thead',\n  '~': 'tfoot',\n  '-': 'tbody'\n};\n\nfunction parseColgroup ( src ) {\n  const colgroup = [ 'colgroup', {} ];\n  src.split( '|' )\n    .forEach( function ( s, isCol ) {\n      const col = ( isCol ) ? {} : colgroup[ 1 ];\n      let d = s.trim();\n      let m;\n      if ( d ) {\n        if ( ( m = /^\\\\(\\d+)/.exec( d ) ) ) {\n          col.span = +m[ 1 ];\n          d = d.slice( m[ 0 ].length );\n        }\n        if ( ( m = parseAttr( d, 'col' ) ) ) {\n          merge( col, m[ 1 ] );\n          d = d.slice( m[ 0 ] );\n        }\n        if ( ( m = /\\b\\d+\\b/.exec( d ) ) ) {\n          col.width = +m[0];\n        }\n      }\n      if ( isCol ) {\n        colgroup.push( '\\n\\t\\t', [ 'col', col ] );\n      }\n    });\n  return colgroup.concat( [ '\\n\\t' ] );\n}\n\nfunction testTable ( src ) {\n  return reTable.exec( src );\n}\n\nfunction parseTable ( src, options, charPosToLine, charOffset ) {\n  if ( options.showOriginalLineNumber ) {\n    const removedSrc = src.match( /^\\s+/ );\n    if ( removedSrc && removedSrc[0] ) {\n      charOffset += removedSrc[0].length;\n    }\n  }\n  src = ribbon( src.trim() );\n\n  const rowgroups = [];\n  let colgroup;\n  let caption;\n  const tAttr = {};\n  let tCurr;\n  let row;\n  let inner;\n  let pba;\n  let more;\n  let m;\n  let extended = 0;\n\n  const setRowGroup = function ( type, pba ) {\n    tCurr = [ type, pba || {} ];\n    rowgroups.push( tCurr );\n  };\n\n  if ( ( m = reHead.exec( src ) ) ) {\n    // parse and apply table attr\n    src.advance( m[0] );\n    pba = parseAttr( m[2], 'table' );\n    if ( pba ) {\n      merge( tAttr, pba[1] );\n    }\n    if ( m[3] ) {\n      tAttr.summary = m[3];\n    }\n  }\n\n  // caption\n  if ( ( m = reCaption.exec( src ) ) ) {\n    caption = [ 'caption' ];\n    if ( ( pba = parseAttr( m[1], 'caption' ) ) ) {\n      caption.push( pba[1] );\n      m[1] = m[1].slice( pba[0] );\n    }\n    if ( /\\./.test( m[1] ) ) { // mandatory \".\"\n      caption.push( m[1].slice( 1 ).replace( /\\|\\s*$/, '' ).trim() );\n      extended++;\n      src.advance( m[0] );\n    }\n    else {\n      caption = null;\n    }\n  }\n\n  do {\n    // colgroup\n    if ( ( m = reColgroup.exec( src ) ) ) {\n      colgroup = parseColgroup( m[1] );\n      extended++;\n    }\n    // \"rowgroup\" (tbody, thead, tfoot)\n    else if ( ( m = reRowgroup.exec( src ) ) ) {\n      // PHP allows any amount of these in any order\n      // and simply translates them straight through\n      // the same is done here.\n      const tag = charToTag[ m[1] ] || 'tbody';\n      pba = parseAttr( `${ m[2] } `, tag );\n      setRowGroup( tag, pba && pba[1] );\n      extended++;\n    }\n    // row\n    else if ( ( m = reRowCapture.exec( src ) ) ) {\n      const localCharOffset = 0 + ( m[1] ? m[1].length : 0 ) + ( m[2] ? m[2].length : 0 ) + ( m[3] ? m[3].length : 0 ) + ( m[4] ? m[4].length : 0 );\n\n      if ( !tCurr ) { setRowGroup( 'tbody' ); }\n\n      row = [ 'tr' ];\n\n      if ( m[3] && ( pba = parseAttr( m[3], 'tr' ) ) ) {\n        // FIXME: requires \"\\.\\s?\" -- else what ?\n        row.push( addLineNumber( pba[1], options, charPosToLine, charOffset, src.getPos() ) );\n      }\n      else {\n        row.push( addLineNumber({}, options, charPosToLine, charOffset, src.getPos() ) );\n      }\n\n      tCurr.push( '\\n\\t\\t', row );\n      inner = ribbon( m[5] );\n      do {\n        inner.save();\n\n        // cell loop\n        const th = inner.startsWith( '_' );\n        let cell = [ th ? 'th' : 'td' ];\n        if ( th ) {\n          inner.advance( 1 );\n        }\n\n        pba = parseAttr( inner, 'td' );\n        if ( pba ) {\n          inner.advance( pba[0] );\n          cell.push( pba[1] ); // FIXME: don't do this if next text fails\n        }\n\n        if ( pba || th ) {\n          const p = /^\\.\\s*/.exec( inner );\n          if ( p ) {\n            inner.advance( p[0] );\n          }\n          else {\n            cell = [ 'td' ];\n            inner.load();\n          }\n        }\n\n        const mx = /^(==.*?==|[^|])*/.exec( inner );\n        cell = cell.concat( parsePhrase( mx[0], options, charPosToLine, charOffset + src.getPos() + localCharOffset + inner.getPos() ) );\n        row.push( '\\n\\t\\t\\t', cell );\n        more = inner.valueOf().charAt( mx[0].length ) === '|';\n        inner.advance( mx[0].length + 1 );\n      }\n      while ( more );\n\n      row.push( '\\n\\t\\t' );\n    }\n    //\n    if ( m ) {\n      src.advance( m[0] );\n    }\n  }\n  while ( m );\n\n  // assemble table\n  let table = [ 'table', tAttr ];\n  if ( extended ) {\n    if ( caption ) {\n      table.push( '\\n\\t', caption );\n    }\n    if ( colgroup ) {\n      table.push( '\\n\\t', colgroup );\n    }\n    rowgroups.forEach( function ( tbody ) {\n      table.push( '\\n\\t', tbody.concat( [ '\\n\\t' ] ) );\n    });\n  }\n  else {\n    table = table.concat( reIndent( rowgroups[0].slice( 2 ), -1 ) );\n  }\n\n  table.push( '\\n' );\n  return table;\n}\n\nmodule.exports = {\n  parseColgroup: parseColgroup,\n  parseTable: parseTable,\n  testTable: testTable\n};\n"],"sourceRoot":""}